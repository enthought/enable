
# This workflow installs dependencies from main branch

name: Test with pip

on:
  pull_request:
  # Make it possible to manually trigger the workflow
  workflow_dispatch:

jobs:
  test-ets:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        toolkit: ['null', 'pyside2', 'pyside6', 'pyqt5', 'wx']
        python-version: ['3.8', '3.10']
        exclude:
          # No Wx wheels available for ubuntu or macos
          - os: 'ubuntu-latest'
            toolkit: 'wx'
          - os: 'macos-latest'
            toolkit: 'wx'
          # Kiva tests hanging on windows, see #1038
          - os: 'windows-latest'
            toolkit: 'pyqt5'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Qt dependencies
        uses: ./.github/actions/install-qt-support
        if: matrix.toolkit != 'wx' && matrix.toolkit != 'null'
      - name: Install dependencies for Linux
        run: |
          # needed for GL
          sudo apt-get install libglu1-mesa-dev
          # needed for Celiagg
          sudo apt-get install libfreetype-dev libharfbuzz-dev
          # needed for Cairo
          sudo apt-get install libcairo2-dev
        if: matrix.os == 'ubuntu-latest'
      - name: Install dependencies for Mac
        run: |
          brew install cairo
        if: matrix.os == 'macos-latest'
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip wheel
      - name: Install local packages
        run: pip install ".[cairo,gl,layout,pdf,svg,test,${{ matrix.toolkit }}]"
      - name: Install celiagg manually
        # This is needed until new release of celiagg
        # - numpy is needed for install in current released version
        run: pip install celiagg
      - name: Sanity check package version
        run: pip list
      - name: Run kiva test suite (Linux)
        env:
          PYTHONFAULTHANDLER: 1
          ETS_QT4_IMPORTS: 1
        run: xvfb-run python -m unittest discover -v kiva
        if: matrix.os == 'ubuntu-latest'
        working-directory: ${{ runner.temp }}
      - name: Run kiva test suite (not Linux)
        env:
          PYTHONFAULTHANDLER: 1
          ETS_QT4_IMPORTS: 1
        run: python -m unittest discover -v kiva
        if: matrix.os != 'ubuntu-latest'
        working-directory: ${{ runner.temp }}
      - name: Run enable test suite (Linux)
        env:
          PYTHONFAULTHANDLER: 1
          ETS_QT4_IMPORTS: 1
        # kiva agg requires at least 15-bit color depth.
        run: xvfb-run --server-args="-screen 0 1024x768x24" python -m unittest discover -v enable
        if: matrix.os == 'ubuntu-latest'
        working-directory: ${{ runner.temp }}
      - name: Run enable test suite (not Linux)
        env:
          PYTHONFAULTHANDLER: 1
          ETS_QT4_IMPORTS: 1
        run: python -m unittest discover -v enable
        if: matrix.os != 'ubuntu-latest'
        working-directory: ${{ runner.temp }}
